#install wordpress on AWS EC2 with terraform
#assuming we have an account, VPC and VM key pair




#terraform.tfvars

access_key = "xxxxxxxxxxx"
secret_key = "xxxxxxxxxxx"
db_username = "xxxxxxxxxxx"
db_password = "xxxxxxxxxxx"




#main.tf

provider "aws" {
region = "eu-south-1"
access_key = var.access_key
secret_key = var.secret_key
}

variable "access_key" {}
variable "secret_key" {}
variable "db_username" {}
variable "db_password" {}

#Create EC2 instance

resource "aws_instance" "webserver1" {
    ami = "ami-010aff33ed5991201"
    instance_type = "t2.micro"
    security_groups = "wp-sg"
    key_name = "my-key"
    tags = {
        Name = "Wordpress Webserver"
    }
}

#Prepare webserver and wordpress

resource "null_resource" "test1" {
 connection {
    type     = "ssh"
    user     = "ec2-user"
    private_key = file("/home/<user>/my-key.pem")
    host     = aws_instance.webserver1.public_ip
  }


 provisioner "remote-exec" {
    inline = [
      "sudo yum install http -y",
      "sudo yum install php -y",
      "sudo systemctl start httpd",
      "sudo systemctl start php",
      "cd /var/www/html",
      "sudo wget https://wordpress.org/latest.zip",
      "sudo unzip latest.zip"
    ]
  }
}

#Prepare RDS with MySQL instance:

resource "aws_db_instance" "default" {
    allocated_storage       = 10
    engine                  = "mysql"
    engine_version          = "5.7"
    instance_class          = "db.t2.micro"
    name                    = "mydb"
    username                = var.db_username
    password                = var.db_password
    parameter_group_name    = "default.mysql5.7"
    skip_final_snapshot     = true
}






#create the infrastructure with terraform apply
#browse to EC2_publicIP:80 and complete the wordpress config
#to achieve redundancy and fault tolerance create an AWS load balancer and setup autoscaling
#to achieve security install a SSL certifcate for the wordpress site
